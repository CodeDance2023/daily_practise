//#include <iostream>
//using namespace std;
//int a[100], v[100] = { 0 }, m, cnt = 0;  //a[]用来储存排列的结果，v[]用来表示这个数是否被用过，m为全排列的个数,cnt为有多少中可能的排列
//void dfs(int step) //step为现在排第几个箱子，当step超过m时，说明已经排完了
//{
//	if (step == m + 1)   //到达m+1个箱子，说明已经排完了
//	{
//		cnt++;
//		for (int i = 1; i <= m; i++)  //从一开始输出结果，因为是从第1个箱子开始的放进去数字的
//		{
//			cout << a[i] << " ";
//		}
//		cout << endl;          
//		return;
//	}
//	for (int j = 1; j <= m; j++) //没到m+1个箱子，说明要从1~m个数字里循环来给箱子放数字
//	{
//		if (v[j] == 0)     //这个数字没有用过
//		{
//			a[step] = j;   //把j这个数字放进第step个箱子里
//			v[j] = 1;         //标记为用过
//			dfs(step + 1);     //继续排下一个箱子
//			v[j] = 0;          //回溯时，要将这个数字设置为未用过
//		}
//	}
//}
//
//
//int main()
//{
//	cout << "输入全排列的个数：";
//	cin >> m;
//	dfs(1);        //该开始step为1，表示正在排第一个箱子
//	cout << "总排列的可能为：" << cnt;
//	return 0;
//}